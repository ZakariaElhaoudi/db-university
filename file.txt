#### SELECT
1. Selezionare tutti gli studenti nati nel 1990 `(160)`

    SELECT *
    FROM `students`
    WHERE YEAR(date_of_birth) = 1990; 

2. Selezionare tutti i corsi che valgono più di 10 crediti `(479)`

    SELECT *
    FROM `courses`
    WHERE cfu > 10;

3. Selezionare tutti gli studenti che hanno più di 30 anni

    SELECT *
    FROM students
    WHERE TIMESTAMPDIFF(YEAR, date_of_birth, NOW()) >= 30;

4. Selezionare tutti i corsi del primo semestre del primo anno di un qualsiasi corso di laurea `(286)`

    SELECT period, year
    FROM courses
    WHERE period = 'I semestre' AND year = 1;

5. Selezionare tutti gli appelli d'esame che avvengono nel pomeriggio (dopo le 14) del 20/06/2020 `(21)`

    SELECT *
    FROM exams
    WHERE DAY(date) = 20
            AND MONTH(date) = 6
        AND YEAR(date) = 2020
        AND HOUR(hour) >= 14;

6. Selezionare tutti i corsi di laurea magistrale `(38)`

    SELECT *
    FROM degrees
    WHERE level = 'magistrale';

7. Contare il numero di dipartimenti di cui e' composta l'università `(12)`

    SELECT COUNT(*)
    FROM `departments`;

8. Contare gli insegnanti che non hanno un numero di telefono `(50)`

    SELECT COUNT(*)
    FROM teachers
    WHERE phone IS NOT NULL;


#### GROUP BY
1. Contare quanti iscritti ci sono stati ogni anno

    SELECT YEAR(enrolment_date), COUNT(*)
    FROM students
    GROUP BY YEAR(enrolment_date);

2. Contare gli insegnanti che hanno l'ufficio nello stesso edificio

    SELECT office_number, COUNT(*) AS teachers_count
    FROM `teachers`
    GROUP BY office_number;

3. Calcolare la media dei voti di ogni appello d'esame

    SELECT exam_id, AVG(vote) AS average_vote
    FROM exam_student
    GROUP BY exam_id;

4. Contare quanti corsi di laurea ci sono per ogni dipartimento

    SELECT department_id , COUNT(*) AS degrees_count
    FROM degrees
    GROUP BY department_id;
